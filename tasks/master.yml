- name: PostgreSQL | Configure master server
  become: yes
  blockinfile:
    path: "{{ postgresql_conf_dir }}/postgresql.conf"
    create: yes
    block: |
      listen_addresses = '*'
      wal_level = hot_standby
      archive_mode = on
      archive_command = 'cd .'
      max_wal_senders = 8
      hot_standby = on
  notify: restart postgres
  
- name: PostgreSQL | Install acl
  become: yes
  apt:
    name:
      - acl
    state: present
    update_cache: true

- name: PostgreSQL | Grant postgres
  shell: "sudo usermod -a -G sudo postgres"

- name: PostgreSQL | Create replication user account
  postgresql_user:
    name: "{{ postgresql_replica_user }}"
    password: "{{ postgresql_replica_password }}"
    role_attr_flags: replication
  become: true
  become_user: postgres

- name: PostgreSQL | Add trust in pg_hba.conf
  become: true
  lineinfile:
    state: present
    dest: "{{ postgresql_conf_dir }}/pg_hba.conf"
    regexp: 'host.*replication.*{{ item }}/32.*trust'
    line: 'host    replication    {{ postgresql_replica_user }}  {{ item }}/32 trust'
  loop: "{{ postgresql_replica_address }}"
  when: postgresql_replica_address is defined
  notify: restart postgres

- name: PostgreSQL | Create postgresql databases
  postgresql_db:
    state: present
    name: "{{ item }}"
  become: true 
  become_user: postgres
  with_items:
    - "{{ postgresql_database_list }}"
  when: postgresql_database_list is defined


- name: PostgreSQL | Create database users
  postgresql_user:
    state: present
    name: "{{ item.name }}"
    password: "{{ item.password }}"
  become: true 
  become_user: postgres
  with_items:
    - "{{ postgresql_user_list }}"
  when: postgresql_user_list is defined


- name: "PostgreSQL | Grant db users access to app db"
  postgresql_privs:
    type: database
    database: "{{ item.db }}"
    roles: "{{ item.user }}"
    grant_option: no
    privs: all
  become: true
  become_user: postgres
  with_items:
    - "{{ postgresql_user_database_list }}"
  when: postgresql_user_database_list is defined

  
- name: "PostgreSQL | Allow md5 connection for the db user"
  postgresql_pg_hba:
    dest: "{{ postgresql_conf_dir }}/pg_hba.conf"
    contype: host
    databases: all
    method: md5
    users: "{{ item.name }}"
    create: true
  become: true
  become_user: postgres
  notify: restart postgres
  with_items:
    - "{{ postgresql_user_list }}"
